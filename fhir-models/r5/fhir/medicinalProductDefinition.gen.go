// Copyright 2024 Medical Center University Freiburg
// Copyright 2019 - 2022 The Samply Community
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fhir

import "encoding/json"

// THIS FILE IS GENERATED BY https://github.com/mcuf-idim/golang-fhir-models
// PLEASE DO NOT EDIT BY HAND

// MedicinalProductDefinition is documented here http://hl7.org/fhir/StructureDefinition/MedicinalProductDefinition
type MedicinalProductDefinition struct {
	Id                             *string                                    `bson:"id,omitempty" json:"id,omitempty"`
	Meta                           *Meta                                      `bson:"meta,omitempty" json:"meta,omitempty"`
	ImplicitRules                  *string                                    `bson:"implicitRules,omitempty" json:"implicitRules,omitempty"`
	Language                       *string                                    `bson:"language,omitempty" json:"language,omitempty"`
	Text                           *Narrative                                 `bson:"text,omitempty" json:"text,omitempty"`
	Extension                      []Extension                                `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension              []Extension                                `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Identifier                     []Identifier                               `bson:"identifier,omitempty" json:"identifier,omitempty"`
	Type                           *CodeableConcept                           `bson:"type,omitempty" json:"type,omitempty"`
	Domain                         *CodeableConcept                           `bson:"domain,omitempty" json:"domain,omitempty"`
	Version                        *string                                    `bson:"version,omitempty" json:"version,omitempty"`
	Status                         *CodeableConcept                           `bson:"status,omitempty" json:"status,omitempty"`
	StatusDate                     *string                                    `bson:"statusDate,omitempty" json:"statusDate,omitempty"`
	Description                    *string                                    `bson:"description,omitempty" json:"description,omitempty"`
	CombinedPharmaceuticalDoseForm *CodeableConcept                           `bson:"combinedPharmaceuticalDoseForm,omitempty" json:"combinedPharmaceuticalDoseForm,omitempty"`
	Route                          []CodeableConcept                          `bson:"route,omitempty" json:"route,omitempty"`
	Indication                     *string                                    `bson:"indication,omitempty" json:"indication,omitempty"`
	LegalStatusOfSupply            *CodeableConcept                           `bson:"legalStatusOfSupply,omitempty" json:"legalStatusOfSupply,omitempty"`
	AdditionalMonitoringIndicator  *CodeableConcept                           `bson:"additionalMonitoringIndicator,omitempty" json:"additionalMonitoringIndicator,omitempty"`
	SpecialMeasures                []CodeableConcept                          `bson:"specialMeasures,omitempty" json:"specialMeasures,omitempty"`
	PediatricUseIndicator          *CodeableConcept                           `bson:"pediatricUseIndicator,omitempty" json:"pediatricUseIndicator,omitempty"`
	Classification                 []CodeableConcept                          `bson:"classification,omitempty" json:"classification,omitempty"`
	MarketingStatus                []MarketingStatus                          `bson:"marketingStatus,omitempty" json:"marketingStatus,omitempty"`
	PackagedMedicinalProduct       []CodeableConcept                          `bson:"packagedMedicinalProduct,omitempty" json:"packagedMedicinalProduct,omitempty"`
	ComprisedOf                    []Reference                                `bson:"comprisedOf,omitempty" json:"comprisedOf,omitempty"`
	Ingredient                     []CodeableConcept                          `bson:"ingredient,omitempty" json:"ingredient,omitempty"`
	Impurity                       []CodeableReference                        `bson:"impurity,omitempty" json:"impurity,omitempty"`
	AttachedDocument               []Reference                                `bson:"attachedDocument,omitempty" json:"attachedDocument,omitempty"`
	MasterFile                     []Reference                                `bson:"masterFile,omitempty" json:"masterFile,omitempty"`
	Contact                        []MedicinalProductDefinitionContact        `bson:"contact,omitempty" json:"contact,omitempty"`
	ClinicalTrial                  []Reference                                `bson:"clinicalTrial,omitempty" json:"clinicalTrial,omitempty"`
	Code                           []Coding                                   `bson:"code,omitempty" json:"code,omitempty"`
	Name                           []MedicinalProductDefinitionName           `bson:"name" json:"name"`
	CrossReference                 []MedicinalProductDefinitionCrossReference `bson:"crossReference,omitempty" json:"crossReference,omitempty"`
	Operation                      []MedicinalProductDefinitionOperation      `bson:"operation,omitempty" json:"operation,omitempty"`
	Characteristic                 []MedicinalProductDefinitionCharacteristic `bson:"characteristic,omitempty" json:"characteristic,omitempty"`
}
type MedicinalProductDefinitionContact struct {
	Id                *string          `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension      `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension      `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type              *CodeableConcept `bson:"type,omitempty" json:"type,omitempty"`
	Contact           Reference        `bson:"contact" json:"contact"`
}
type MedicinalProductDefinitionName struct {
	Id                *string                               `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension                           `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension                           `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	ProductName       string                                `bson:"productName" json:"productName"`
	Type              *CodeableConcept                      `bson:"type,omitempty" json:"type,omitempty"`
	Part              []MedicinalProductDefinitionNamePart  `bson:"part,omitempty" json:"part,omitempty"`
	Usage             []MedicinalProductDefinitionNameUsage `bson:"usage,omitempty" json:"usage,omitempty"`
}
type MedicinalProductDefinitionNamePart struct {
	Id                *string         `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension     `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension     `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Part              string          `bson:"part" json:"part"`
	Type              CodeableConcept `bson:"type" json:"type"`
}
type MedicinalProductDefinitionNameUsage struct {
	Id                *string          `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension      `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension      `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Country           CodeableConcept  `bson:"country" json:"country"`
	Jurisdiction      *CodeableConcept `bson:"jurisdiction,omitempty" json:"jurisdiction,omitempty"`
	Language          CodeableConcept  `bson:"language" json:"language"`
}
type MedicinalProductDefinitionCrossReference struct {
	Id                *string           `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension       `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension       `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Product           CodeableReference `bson:"product" json:"product"`
	Type              *CodeableConcept  `bson:"type,omitempty" json:"type,omitempty"`
}
type MedicinalProductDefinitionOperation struct {
	Id                       *string            `bson:"id,omitempty" json:"id,omitempty"`
	Extension                []Extension        `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension        []Extension        `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type                     *CodeableReference `bson:"type,omitempty" json:"type,omitempty"`
	EffectiveDate            *Period            `bson:"effectiveDate,omitempty" json:"effectiveDate,omitempty"`
	Organization             []Reference        `bson:"organization,omitempty" json:"organization,omitempty"`
	ConfidentialityIndicator *CodeableConcept   `bson:"confidentialityIndicator,omitempty" json:"confidentialityIndicator,omitempty"`
}
type MedicinalProductDefinitionCharacteristic struct {
	Id                   *string          `bson:"id,omitempty" json:"id,omitempty"`
	Extension            []Extension      `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension    []Extension      `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type                 CodeableConcept  `bson:"type" json:"type"`
	ValueCodeableConcept *CodeableConcept `bson:"valueCodeableConcept,omitempty" json:"valueCodeableConcept,omitempty"`
	ValueMarkdown        *string          `bson:"valueMarkdown,omitempty" json:"valueMarkdown,omitempty"`
	ValueQuantity        *Quantity        `bson:"valueQuantity,omitempty" json:"valueQuantity,omitempty"`
	ValueInteger         *int             `bson:"valueInteger,omitempty" json:"valueInteger,omitempty"`
	ValueDate            *string          `bson:"valueDate,omitempty" json:"valueDate,omitempty"`
	ValueBoolean         *bool            `bson:"valueBoolean,omitempty" json:"valueBoolean,omitempty"`
	ValueAttachment      *Attachment      `bson:"valueAttachment,omitempty" json:"valueAttachment,omitempty"`
}
type OtherMedicinalProductDefinition MedicinalProductDefinition

// MarshalJSON marshals the given MedicinalProductDefinition as JSON into a byte slice
func (r MedicinalProductDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(struct {
		OtherMedicinalProductDefinition
		ResourceType string `json:"resourceType"`
	}{
		OtherMedicinalProductDefinition: OtherMedicinalProductDefinition(r),
		ResourceType:                    "MedicinalProductDefinition",
	})
}

// UnmarshalMedicinalProductDefinition unmarshals a MedicinalProductDefinition.
func UnmarshalMedicinalProductDefinition(b []byte) (MedicinalProductDefinition, error) {
	var medicinalProductDefinition MedicinalProductDefinition
	if err := json.Unmarshal(b, &medicinalProductDefinition); err != nil {
		return medicinalProductDefinition, err
	}
	return medicinalProductDefinition, nil
}
