// Copyright 2019 - 2022 The Samply Community
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fhir

import (
	"encoding/json"
	"fmt"
	"strings"
)

// THIS FILE IS GENERATED BY https://github.com/samply/golang-fhir-models
// PLEASE DO NOT EDIT BY HAND

// FormularyItemStatusCodes is documented here http://hl7.org/fhir/ValueSet/formularyitem-status
type FormularyItemStatusCodes int

const (
	FormularyItemStatusCodesActive FormularyItemStatusCodes = iota
	FormularyItemStatusCodesEnteredInError
	FormularyItemStatusCodesInactive
)

func (code FormularyItemStatusCodes) MarshalJSON() ([]byte, error) {
	return json.Marshal(code.Code())
}
func (code *FormularyItemStatusCodes) UnmarshalJSON(json []byte) error {
	s := strings.Trim(string(json), "\"")
	switch s {
	case "active":
		*code = FormularyItemStatusCodesActive
	case "entered-in-error":
		*code = FormularyItemStatusCodesEnteredInError
	case "inactive":
		*code = FormularyItemStatusCodesInactive
	default:
		return fmt.Errorf("unknown FormularyItemStatusCodes code `%s`", s)
	}
	return nil
}
func (code FormularyItemStatusCodes) String() string {
	return code.Code()
}
func (code FormularyItemStatusCodes) Code() string {
	switch code {
	case FormularyItemStatusCodesActive:
		return "active"
	case FormularyItemStatusCodesEnteredInError:
		return "entered-in-error"
	case FormularyItemStatusCodesInactive:
		return "inactive"
	}
	return "<unknown>"
}
func (code FormularyItemStatusCodes) Display() string {
	switch code {
	case FormularyItemStatusCodesActive:
		return "Active"
	case FormularyItemStatusCodesEnteredInError:
		return "Entered in Error"
	case FormularyItemStatusCodesInactive:
		return "Inactive"
	}
	return "<unknown>"
}
func (code FormularyItemStatusCodes) Definition() string {
	switch code {
	case FormularyItemStatusCodesActive:
		return "The service or product referred to by this FormularyItem is in active use within the drug database or inventory system."
	case FormularyItemStatusCodesEnteredInError:
		return "The service or product referred to by this FormularyItem was entered in error within the drug database or inventory system."
	case FormularyItemStatusCodesInactive:
		return "The service or product referred to by this FormularyItem is not in active use within the drug database or inventory system."
	}
	return "<unknown>"
}
