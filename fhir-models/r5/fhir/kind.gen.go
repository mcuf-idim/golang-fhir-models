// Copyright 2024 Medical Center University Freiburg
// Copyright 2019 - 2022 The Samply Community
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fhir

import (
	"encoding/json"
	"fmt"
	"strings"
)

// THIS FILE IS GENERATED BY https://github.com/mcuf-idim/golang-fhir-models
// PLEASE DO NOT EDIT BY HAND

// Kind is documented here http://hl7.org/fhir/ValueSet/coverage-kind
type Kind int

const (
	KindInsurance Kind = iota
	KindSelfPay
	KindOther
)

func (code Kind) MarshalJSON() ([]byte, error) {
	return json.Marshal(code.Code())
}
func (code *Kind) UnmarshalJSON(json []byte) error {
	s := strings.Trim(string(json), "\"")
	switch s {
	case "insurance":
		*code = KindInsurance
	case "self-pay":
		*code = KindSelfPay
	case "other":
		*code = KindOther
	default:
		return fmt.Errorf("unknown Kind code `%s`", s)
	}
	return nil
}
func (code Kind) String() string {
	return code.Code()
}
func (code Kind) Code() string {
	switch code {
	case KindInsurance:
		return "insurance"
	case KindSelfPay:
		return "self-pay"
	case KindOther:
		return "other"
	}
	return "<unknown>"
}
func (code Kind) Display() string {
	switch code {
	case KindInsurance:
		return "Insurance"
	case KindSelfPay:
		return "Self-pay"
	case KindOther:
		return "Other"
	}
	return "<unknown>"
}
func (code Kind) Definition() string {
	switch code {
	case KindInsurance:
		return "The Coverage provides the identifiers and card-level details of an insurance policy."
	case KindSelfPay:
		return "One or more persons and/or organizations are paying for the services rendered."
	case KindOther:
		return "Some other organization is paying for the service."
	}
	return "<unknown>"
}
