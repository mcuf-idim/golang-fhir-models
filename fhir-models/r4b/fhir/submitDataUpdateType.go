// Copyright 2019 - 2022 The Samply Community
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fhir

import (
	"encoding/json"
	"fmt"
	"strings"
)

// THIS FILE IS GENERATED BY https://github.com/samply/golang-fhir-models
// PLEASE DO NOT EDIT BY HAND

// SubmitDataUpdateType is documented here http://hl7.org/fhir/ValueSet/submit-data-update-type
type SubmitDataUpdateType int

const (
	SubmitDataUpdateTypeIncremental SubmitDataUpdateType = iota
	SubmitDataUpdateTypeSnapshot
)

func (code SubmitDataUpdateType) MarshalJSON() ([]byte, error) {
	return json.Marshal(code.Code())
}
func (code *SubmitDataUpdateType) UnmarshalJSON(json []byte) error {
	s := strings.Trim(string(json), "\"")
	switch s {
	case "incremental":
		*code = SubmitDataUpdateTypeIncremental
	case "snapshot":
		*code = SubmitDataUpdateTypeSnapshot
	default:
		return fmt.Errorf("unknown SubmitDataUpdateType code `%s`", s)
	}
	return nil
}
func (code SubmitDataUpdateType) String() string {
	return code.Code()
}
func (code SubmitDataUpdateType) Code() string {
	switch code {
	case SubmitDataUpdateTypeIncremental:
		return "incremental"
	case SubmitDataUpdateTypeSnapshot:
		return "snapshot"
	}
	return "<unknown>"
}
func (code SubmitDataUpdateType) Display() string {
	switch code {
	case SubmitDataUpdateTypeIncremental:
		return "Incremental"
	case SubmitDataUpdateTypeSnapshot:
		return "Snapshot"
	}
	return "<unknown>"
}
func (code SubmitDataUpdateType) Definition() string {
	switch code {
	case SubmitDataUpdateTypeIncremental:
		return "In contrast to the Snapshot Update, the FHIR Parameters resource used in a Submit Data or the Collect Data scenario contains only the new and updated DEQM and QI Core Profiles since the last transaction. If the Consumer supports incremental updates, the contents of the updated payload updates the previous payload data."
	case SubmitDataUpdateTypeSnapshot:
		return "In contrast to the Incremental Update, the FHIR Parameters resource used in a Submit Data or the Collect Data scenario contains all the DEQM and QI Core Profiles for each transaction.  If the Consumer supports snapshot updates, the contents of the updated payload entirely replaces the previous payload"
	}
	return "<unknown>"
}
