// Copyright 2024 Medical Center University Freiburg
// Copyright 2019 - 2022 The Samply Community
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fhir

import (
	"encoding/json"
	"fmt"
	"strings"
)

// THIS FILE IS GENERATED BY https://github.com/mcuf-idim/golang-fhir-models
// PLEASE DO NOT EDIT BY HAND

// GenomicStudyStatus is documented here http://hl7.org/fhir/ValueSet/genomicstudy-status
type GenomicStudyStatus int

const (
	GenomicStudyStatusRegistered GenomicStudyStatus = iota
	GenomicStudyStatusAvailable
	GenomicStudyStatusCancelled
	GenomicStudyStatusEnteredInError
	GenomicStudyStatusUnknown
)

func (code GenomicStudyStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(code.Code())
}
func (code *GenomicStudyStatus) UnmarshalJSON(json []byte) error {
	s := strings.Trim(string(json), "\"")
	switch s {
	case "registered":
		*code = GenomicStudyStatusRegistered
	case "available":
		*code = GenomicStudyStatusAvailable
	case "cancelled":
		*code = GenomicStudyStatusCancelled
	case "entered-in-error":
		*code = GenomicStudyStatusEnteredInError
	case "unknown":
		*code = GenomicStudyStatusUnknown
	default:
		return fmt.Errorf("unknown GenomicStudyStatus code `%s`", s)
	}
	return nil
}
func (code GenomicStudyStatus) String() string {
	return code.Code()
}
func (code GenomicStudyStatus) Code() string {
	switch code {
	case GenomicStudyStatusRegistered:
		return "registered"
	case GenomicStudyStatusAvailable:
		return "available"
	case GenomicStudyStatusCancelled:
		return "cancelled"
	case GenomicStudyStatusEnteredInError:
		return "entered-in-error"
	case GenomicStudyStatusUnknown:
		return "unknown"
	}
	return "<unknown>"
}
func (code GenomicStudyStatus) Display() string {
	switch code {
	case GenomicStudyStatusRegistered:
		return "Registered"
	case GenomicStudyStatusAvailable:
		return "Available"
	case GenomicStudyStatusCancelled:
		return "Cancelled"
	case GenomicStudyStatusEnteredInError:
		return "Entered in Error"
	case GenomicStudyStatusUnknown:
		return "Unknown"
	}
	return "<unknown>"
}
func (code GenomicStudyStatus) Definition() string {
	switch code {
	case GenomicStudyStatusRegistered:
		return "The existence of the genomic study is registered, but there is nothing yet available."
	case GenomicStudyStatusAvailable:
		return "At least one instance has been associated with this genomic study."
	case GenomicStudyStatusCancelled:
		return "The genomic study is unavailable because the genomic study was not started or not completed (also sometimes called \"aborted\")."
	case GenomicStudyStatusEnteredInError:
		return "The genomic study has been withdrawn following a previous final release.  This electronic record should never have existed, though it is possible that real-world decisions were based on it. (If real-world activity has occurred, the status should be \"cancelled\" rather than \"entered-in-error\".)."
	case GenomicStudyStatusUnknown:
		return "The system does not know which of the status values currently applies for this request. Note: This concept is not to be used for \"other\" - one of the listed statuses is presumed to apply, it's just not known which one."
	}
	return "<unknown>"
}
