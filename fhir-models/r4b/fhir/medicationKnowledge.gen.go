// Copyright 2024 Medical Center University Freiburg
// Copyright 2019 - 2022 The Samply Community
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fhir

import "encoding/json"

// THIS FILE IS GENERATED BY https://github.com/mcuf-idim/golang-fhir-models
// PLEASE DO NOT EDIT BY HAND

// MedicationKnowledge is documented here http://hl7.org/fhir/StructureDefinition/MedicationKnowledge
type MedicationKnowledge struct {
	Id                         *string                                         `bson:"id,omitempty" json:"id,omitempty"`
	Meta                       *Meta                                           `bson:"meta,omitempty" json:"meta,omitempty"`
	ImplicitRules              *string                                         `bson:"implicitRules,omitempty" json:"implicitRules,omitempty"`
	Language                   *string                                         `bson:"language,omitempty" json:"language,omitempty"`
	Text                       *Narrative                                      `bson:"text,omitempty" json:"text,omitempty"`
	Extension                  []Extension                                     `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension          []Extension                                     `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Identifier                 []Identifier                                    `bson:"identifier,omitempty" json:"identifier,omitempty"`
	Code                       *CodeableConcept                                `bson:"code,omitempty" json:"code,omitempty"`
	Status                     *MedicationKnowledgeStatusCodes                 `bson:"status,omitempty" json:"status,omitempty"`
	Author                     *Reference                                      `bson:"author,omitempty" json:"author,omitempty"`
	IntendedJurisdiction       []CodeableConcept                               `bson:"intendedJurisdiction,omitempty" json:"intendedJurisdiction,omitempty"`
	Name                       []string                                        `bson:"name,omitempty" json:"name,omitempty"`
	RelatedMedicationKnowledge []MedicationKnowledgeRelatedMedicationKnowledge `bson:"relatedMedicationKnowledge,omitempty" json:"relatedMedicationKnowledge,omitempty"`
	AssociatedMedication       []Reference                                     `bson:"associatedMedication,omitempty" json:"associatedMedication,omitempty"`
	ProductType                []CodeableConcept                               `bson:"productType,omitempty" json:"productType,omitempty"`
	Monograph                  []MedicationKnowledgeMonograph                  `bson:"monograph,omitempty" json:"monograph,omitempty"`
	PreparationInstruction     *string                                         `bson:"preparationInstruction,omitempty" json:"preparationInstruction,omitempty"`
	Cost                       []MedicationKnowledgeCost                       `bson:"cost,omitempty" json:"cost,omitempty"`
	MonitoringProgram          []MedicationKnowledgeMonitoringProgram          `bson:"monitoringProgram,omitempty" json:"monitoringProgram,omitempty"`
	IndicationGuideline        []MedicationKnowledgeIndicationGuideline        `bson:"indicationGuideline,omitempty" json:"indicationGuideline,omitempty"`
	MedicineClassification     []MedicationKnowledgeMedicineClassification     `bson:"medicineClassification,omitempty" json:"medicineClassification,omitempty"`
	Packaging                  []MedicationKnowledgePackaging                  `bson:"packaging,omitempty" json:"packaging,omitempty"`
	ClinicalUseIssue           []Reference                                     `bson:"clinicalUseIssue,omitempty" json:"clinicalUseIssue,omitempty"`
	StorageGuideline           []MedicationKnowledgeStorageGuideline           `bson:"storageGuideline,omitempty" json:"storageGuideline,omitempty"`
	Regulatory                 []MedicationKnowledgeRegulatory                 `bson:"regulatory,omitempty" json:"regulatory,omitempty"`
	Definitional               *MedicationKnowledgeDefinitional                `bson:"definitional,omitempty" json:"definitional,omitempty"`
}
type MedicationKnowledgeRelatedMedicationKnowledge struct {
	Id                *string         `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension     `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension     `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type              CodeableConcept `bson:"type" json:"type"`
	Reference         []Reference     `bson:"reference" json:"reference"`
}
type MedicationKnowledgeMonograph struct {
	Id                *string          `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension      `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension      `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type              *CodeableConcept `bson:"type,omitempty" json:"type,omitempty"`
	Source            *Reference       `bson:"source,omitempty" json:"source,omitempty"`
}
type MedicationKnowledgeCost struct {
	Id                  *string         `bson:"id,omitempty" json:"id,omitempty"`
	Extension           []Extension     `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension   []Extension     `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	EffectiveDate       []Period        `bson:"effectiveDate,omitempty" json:"effectiveDate,omitempty"`
	Type                CodeableConcept `bson:"type" json:"type"`
	Source              *string         `bson:"source,omitempty" json:"source,omitempty"`
	CostMoney           Money           `bson:"costMoney" json:"costMoney"`
	CostCodeableConcept CodeableConcept `bson:"costCodeableConcept" json:"costCodeableConcept"`
}
type MedicationKnowledgeMonitoringProgram struct {
	Id                *string          `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension      `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension      `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type              *CodeableConcept `bson:"type,omitempty" json:"type,omitempty"`
	Name              *string          `bson:"name,omitempty" json:"name,omitempty"`
}
type MedicationKnowledgeIndicationGuideline struct {
	Id                *string                                                 `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension                                             `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension                                             `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Indication        []CodeableReference                                     `bson:"indication,omitempty" json:"indication,omitempty"`
	DosingGuideline   []MedicationKnowledgeIndicationGuidelineDosingGuideline `bson:"dosingGuideline,omitempty" json:"dosingGuideline,omitempty"`
}
type MedicationKnowledgeIndicationGuidelineDosingGuideline struct {
	Id                      *string                                                                      `bson:"id,omitempty" json:"id,omitempty"`
	Extension               []Extension                                                                  `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension       []Extension                                                                  `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	TreatmentIntent         *CodeableConcept                                                             `bson:"treatmentIntent,omitempty" json:"treatmentIntent,omitempty"`
	Dosage                  []MedicationKnowledgeIndicationGuidelineDosingGuidelineDosage                `bson:"dosage,omitempty" json:"dosage,omitempty"`
	AdministrationTreatment *CodeableConcept                                                             `bson:"administrationTreatment,omitempty" json:"administrationTreatment,omitempty"`
	PatientCharacteristic   []MedicationKnowledgeIndicationGuidelineDosingGuidelinePatientCharacteristic `bson:"patientCharacteristic,omitempty" json:"patientCharacteristic,omitempty"`
}
type MedicationKnowledgeIndicationGuidelineDosingGuidelineDosage struct {
	Id                *string         `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension     `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension     `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type              CodeableConcept `bson:"type" json:"type"`
	Dosage            []Dosage        `bson:"dosage" json:"dosage"`
}
type MedicationKnowledgeIndicationGuidelineDosingGuidelinePatientCharacteristic struct {
	Id                   *string          `bson:"id,omitempty" json:"id,omitempty"`
	Extension            []Extension      `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension    []Extension      `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type                 CodeableConcept  `bson:"type" json:"type"`
	ValueCodeableConcept *CodeableConcept `bson:"valueCodeableConcept,omitempty" json:"valueCodeableConcept,omitempty"`
	ValueQuantity        *Quantity        `bson:"valueQuantity,omitempty" json:"valueQuantity,omitempty"`
	ValueRange           *Range           `bson:"valueRange,omitempty" json:"valueRange,omitempty"`
}
type MedicationKnowledgeMedicineClassification struct {
	Id                *string           `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension       `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension       `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type              CodeableConcept   `bson:"type" json:"type"`
	SourceString      *string           `bson:"sourceString,omitempty" json:"sourceString,omitempty"`
	SourceUri         *string           `bson:"sourceUri,omitempty" json:"sourceUri,omitempty"`
	Classification    []CodeableConcept `bson:"classification,omitempty" json:"classification,omitempty"`
}
type MedicationKnowledgePackaging struct {
	Id                *string                   `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension               `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension               `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Cost              []MedicationKnowledgeCost `bson:"cost,omitempty" json:"cost,omitempty"`
	PackagedProduct   *Reference                `bson:"packagedProduct,omitempty" json:"packagedProduct,omitempty"`
}
type MedicationKnowledgeStorageGuideline struct {
	Id                   *string                                                   `bson:"id,omitempty" json:"id,omitempty"`
	Extension            []Extension                                               `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension    []Extension                                               `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Reference            *string                                                   `bson:"reference,omitempty" json:"reference,omitempty"`
	Note                 []Annotation                                              `bson:"note,omitempty" json:"note,omitempty"`
	StabilityDuration    *Duration                                                 `bson:"stabilityDuration,omitempty" json:"stabilityDuration,omitempty"`
	EnvironmentalSetting []MedicationKnowledgeStorageGuidelineEnvironmentalSetting `bson:"environmentalSetting,omitempty" json:"environmentalSetting,omitempty"`
}
type MedicationKnowledgeStorageGuidelineEnvironmentalSetting struct {
	Id                   *string         `bson:"id,omitempty" json:"id,omitempty"`
	Extension            []Extension     `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension    []Extension     `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type                 CodeableConcept `bson:"type" json:"type"`
	ValueQuantity        Quantity        `bson:"valueQuantity" json:"valueQuantity"`
	ValueRange           Range           `bson:"valueRange" json:"valueRange"`
	ValueCodeableConcept CodeableConcept `bson:"valueCodeableConcept" json:"valueCodeableConcept"`
}
type MedicationKnowledgeRegulatory struct {
	Id                  *string                                     `bson:"id,omitempty" json:"id,omitempty"`
	Extension           []Extension                                 `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension   []Extension                                 `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	RegulatoryAuthority Reference                                   `bson:"regulatoryAuthority" json:"regulatoryAuthority"`
	Substitution        []MedicationKnowledgeRegulatorySubstitution `bson:"substitution,omitempty" json:"substitution,omitempty"`
	Schedule            []CodeableConcept                           `bson:"schedule,omitempty" json:"schedule,omitempty"`
	MaxDispense         *MedicationKnowledgeRegulatoryMaxDispense   `bson:"maxDispense,omitempty" json:"maxDispense,omitempty"`
}
type MedicationKnowledgeRegulatorySubstitution struct {
	Id                *string         `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension     `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension     `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type              CodeableConcept `bson:"type" json:"type"`
	Allowed           bool            `bson:"allowed" json:"allowed"`
}
type MedicationKnowledgeRegulatoryMaxDispense struct {
	Id                *string     `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Quantity          Quantity    `bson:"quantity" json:"quantity"`
	Period            *Duration   `bson:"period,omitempty" json:"period,omitempty"`
}
type MedicationKnowledgeDefinitional struct {
	Id                 *string                                             `bson:"id,omitempty" json:"id,omitempty"`
	Extension          []Extension                                         `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension  []Extension                                         `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Definition         []Reference                                         `bson:"definition,omitempty" json:"definition,omitempty"`
	DoseForm           *CodeableConcept                                    `bson:"doseForm,omitempty" json:"doseForm,omitempty"`
	IntendedRoute      []CodeableConcept                                   `bson:"intendedRoute,omitempty" json:"intendedRoute,omitempty"`
	Ingredient         []MedicationKnowledgeDefinitionalIngredient         `bson:"ingredient,omitempty" json:"ingredient,omitempty"`
	DrugCharacteristic []MedicationKnowledgeDefinitionalDrugCharacteristic `bson:"drugCharacteristic,omitempty" json:"drugCharacteristic,omitempty"`
}
type MedicationKnowledgeDefinitionalIngredient struct {
	Id                      *string           `bson:"id,omitempty" json:"id,omitempty"`
	Extension               []Extension       `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension       []Extension       `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Item                    CodeableReference `bson:"item" json:"item"`
	Type                    *CodeableConcept  `bson:"type,omitempty" json:"type,omitempty"`
	StrengthRatio           *Ratio            `bson:"strengthRatio,omitempty" json:"strengthRatio,omitempty"`
	StrengthCodeableConcept *CodeableConcept  `bson:"strengthCodeableConcept,omitempty" json:"strengthCodeableConcept,omitempty"`
	StrengthQuantity        *Quantity         `bson:"strengthQuantity,omitempty" json:"strengthQuantity,omitempty"`
}
type MedicationKnowledgeDefinitionalDrugCharacteristic struct {
	Id                   *string          `bson:"id,omitempty" json:"id,omitempty"`
	Extension            []Extension      `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension    []Extension      `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type                 *CodeableConcept `bson:"type,omitempty" json:"type,omitempty"`
	ValueCodeableConcept *CodeableConcept `bson:"valueCodeableConcept,omitempty" json:"valueCodeableConcept,omitempty"`
	ValueString          *string          `bson:"valueString,omitempty" json:"valueString,omitempty"`
	ValueQuantity        *Quantity        `bson:"valueQuantity,omitempty" json:"valueQuantity,omitempty"`
	ValueBase64Binary    *string          `bson:"valueBase64Binary,omitempty" json:"valueBase64Binary,omitempty"`
	ValueAttachment      *Attachment      `bson:"valueAttachment,omitempty" json:"valueAttachment,omitempty"`
}
type OtherMedicationKnowledge MedicationKnowledge

// MarshalJSON marshals the given MedicationKnowledge as JSON into a byte slice
func (r MedicationKnowledge) MarshalJSON() ([]byte, error) {
	return json.Marshal(struct {
		OtherMedicationKnowledge
		ResourceType string `json:"resourceType"`
	}{
		OtherMedicationKnowledge: OtherMedicationKnowledge(r),
		ResourceType:             "MedicationKnowledge",
	})
}
func (r MedicationKnowledge) ResourceType() string {
	return "MedicationKnowledge"
}

// UnmarshalMedicationKnowledge unmarshals a MedicationKnowledge.
func UnmarshalMedicationKnowledge(b []byte) (MedicationKnowledge, error) {
	var medicationKnowledge MedicationKnowledge
	if err := json.Unmarshal(b, &medicationKnowledge); err != nil {
		return medicationKnowledge, err
	}
	return medicationKnowledge, nil
}
