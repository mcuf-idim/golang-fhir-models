// Copyright 2024 Medical Center University Freiburg
// Copyright 2019 - 2022 The Samply Community
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fhir

import (
	"encoding/json"
	"fmt"
	"strings"
)

// THIS FILE IS GENERATED BY https://github.com/mcuf-idim/golang-fhir-models
// PLEASE DO NOT EDIT BY HAND

// CriteriaNotExistsBehavior is documented here http://hl7.org/fhir/ValueSet/subscriptiontopic-cr-behavior
type CriteriaNotExistsBehavior int

const (
	CriteriaNotExistsBehaviorTestPasses CriteriaNotExistsBehavior = iota
	CriteriaNotExistsBehaviorTestFails
)

func (code CriteriaNotExistsBehavior) MarshalJSON() ([]byte, error) {
	return json.Marshal(code.Code())
}
func (code *CriteriaNotExistsBehavior) UnmarshalJSON(json []byte) error {
	s := strings.Trim(string(json), "\"")
	switch s {
	case "test-passes":
		*code = CriteriaNotExistsBehaviorTestPasses
	case "test-fails":
		*code = CriteriaNotExistsBehaviorTestFails
	default:
		return fmt.Errorf("unknown CriteriaNotExistsBehavior code `%s`", s)
	}
	return nil
}
func (code CriteriaNotExistsBehavior) String() string {
	return code.Code()
}
func (code CriteriaNotExistsBehavior) Code() string {
	switch code {
	case CriteriaNotExistsBehaviorTestPasses:
		return "test-passes"
	case CriteriaNotExistsBehaviorTestFails:
		return "test-fails"
	}
	return "<unknown>"
}
func (code CriteriaNotExistsBehavior) Display() string {
	switch code {
	case CriteriaNotExistsBehaviorTestPasses:
		return "Test passes"
	case CriteriaNotExistsBehaviorTestFails:
		return "Test fails"
	}
	return "<unknown>"
}
func (code CriteriaNotExistsBehavior) Definition() string {
	switch code {
	case CriteriaNotExistsBehaviorTestPasses:
		return "The requested conditional statement will pass if a matching state does not exist (e.g., previous state during create)."
	case CriteriaNotExistsBehaviorTestFails:
		return "The requested conditional statement will fail if a matching state does not exist (e.g., previous state during create)."
	}
	return "<unknown>"
}
