// Copyright 2024 Medical Center University Freiburg
// Copyright 2019 - 2022 The Samply Community
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fhir

import (
	"encoding/json"
	"fmt"
	"strings"
)

// THIS FILE IS GENERATED BY https://github.com/mcuf-idim/golang-fhir-models
// PLEASE DO NOT EDIT BY HAND

// InventoryItemStatusCodes is documented here http://hl7.org/fhir/ValueSet/inventoryitem-status
type InventoryItemStatusCodes int

const (
	InventoryItemStatusCodesActive InventoryItemStatusCodes = iota
	InventoryItemStatusCodesInactive
	InventoryItemStatusCodesEnteredInError
	InventoryItemStatusCodesUnknown
)

func (code InventoryItemStatusCodes) MarshalJSON() ([]byte, error) {
	return json.Marshal(code.Code())
}
func (code *InventoryItemStatusCodes) UnmarshalJSON(json []byte) error {
	s := strings.Trim(string(json), "\"")
	switch s {
	case "active":
		*code = InventoryItemStatusCodesActive
	case "inactive":
		*code = InventoryItemStatusCodesInactive
	case "entered-in-error":
		*code = InventoryItemStatusCodesEnteredInError
	case "unknown":
		*code = InventoryItemStatusCodesUnknown
	default:
		return fmt.Errorf("unknown InventoryItemStatusCodes code `%s`", s)
	}
	return nil
}
func (code InventoryItemStatusCodes) String() string {
	return code.Code()
}
func (code InventoryItemStatusCodes) Code() string {
	switch code {
	case InventoryItemStatusCodesActive:
		return "active"
	case InventoryItemStatusCodesInactive:
		return "inactive"
	case InventoryItemStatusCodesEnteredInError:
		return "entered-in-error"
	case InventoryItemStatusCodesUnknown:
		return "unknown"
	}
	return "<unknown>"
}
func (code InventoryItemStatusCodes) Display() string {
	switch code {
	case InventoryItemStatusCodesActive:
		return "Active"
	case InventoryItemStatusCodesInactive:
		return "Inactive"
	case InventoryItemStatusCodesEnteredInError:
		return "Entered in Error"
	case InventoryItemStatusCodesUnknown:
		return "Unknown"
	}
	return "<unknown>"
}
func (code InventoryItemStatusCodes) Definition() string {
	switch code {
	case InventoryItemStatusCodesActive:
		return "The item is active and can be referenced."
	case InventoryItemStatusCodesInactive:
		return "The item is presently inactive - there may be references to it but the item is not expected to be used."
	case InventoryItemStatusCodesEnteredInError:
		return "The item record was entered in error."
	case InventoryItemStatusCodesUnknown:
		return "The item status has not been determined."
	}
	return "<unknown>"
}
