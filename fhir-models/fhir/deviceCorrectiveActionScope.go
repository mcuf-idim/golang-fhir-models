// Copyright 2019 - 2022 The Samply Community
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fhir

import (
	"encoding/json"
	"fmt"
	"strings"
)

// THIS FILE IS GENERATED BY https://github.com/samply/golang-fhir-models
// PLEASE DO NOT EDIT BY HAND

// DeviceCorrectiveActionScope is documented here http://hl7.org/fhir/ValueSet/device-correctiveactionscope
type DeviceCorrectiveActionScope int

const (
	DeviceCorrectiveActionScopeModel DeviceCorrectiveActionScope = iota
	DeviceCorrectiveActionScopeLotNumbers
	DeviceCorrectiveActionScopeSerialNumbers
)

func (code DeviceCorrectiveActionScope) MarshalJSON() ([]byte, error) {
	return json.Marshal(code.Code())
}
func (code *DeviceCorrectiveActionScope) UnmarshalJSON(json []byte) error {
	s := strings.Trim(string(json), "\"")
	switch s {
	case "model":
		*code = DeviceCorrectiveActionScopeModel
	case "lot-numbers":
		*code = DeviceCorrectiveActionScopeLotNumbers
	case "serial-numbers":
		*code = DeviceCorrectiveActionScopeSerialNumbers
	default:
		return fmt.Errorf("unknown DeviceCorrectiveActionScope code `%s`", s)
	}
	return nil
}
func (code DeviceCorrectiveActionScope) String() string {
	return code.Code()
}
func (code DeviceCorrectiveActionScope) Code() string {
	switch code {
	case DeviceCorrectiveActionScopeModel:
		return "model"
	case DeviceCorrectiveActionScopeLotNumbers:
		return "lot-numbers"
	case DeviceCorrectiveActionScopeSerialNumbers:
		return "serial-numbers"
	}
	return "<unknown>"
}
func (code DeviceCorrectiveActionScope) Display() string {
	switch code {
	case DeviceCorrectiveActionScopeModel:
		return "Model"
	case DeviceCorrectiveActionScopeLotNumbers:
		return "Lot Numbers"
	case DeviceCorrectiveActionScopeSerialNumbers:
		return "Serial Numbers"
	}
	return "<unknown>"
}
func (code DeviceCorrectiveActionScope) Definition() string {
	switch code {
	case DeviceCorrectiveActionScopeModel:
		return "The corrective action was intended for all units of the same model."
	case DeviceCorrectiveActionScopeLotNumbers:
		return "The corrective action was intended for a specific batch of units identified by a lot number."
	case DeviceCorrectiveActionScopeSerialNumbers:
		return "The corrective action was intended for an individual unit (or a set of units) individually identified by serial number."
	}
	return "<unknown>"
}
